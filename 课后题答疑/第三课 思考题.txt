本节课后面有如下几个思考题，这里简单说下可能的实现思路。

1、如果手上有某个英文版应用的可执行程序，如何对其进行汉化？

思路：对于纯用编译型语言开发的应用来说，应用中出现的大多数提示性的文字，都会被放在ELF文件的strtab段内的，程序内对这些常量字符串的引用，都会指向这个节区运行时映射到内存中的地址。在这个节区内，多个以0结尾的字符串依次顺序存放，所以，要汉化一个软件，只要把这个节区内的英文翻译成中文，并保留原始的起始地址就可以了。需要注意的是，翻译的时候要特别注意翻译前后文本的长度，翻译后的中文所占的字节长度，一定要小于等于原始英文占据的字节长度，并用合适的0字符结尾，否则可能会由于字符串没有结尾而引起软件运行时的错误。

2、若要将可执行文件中的某些资源提取出来，该如何写程序？

思路：要正确的提起资源，还是要透彻的理解ELF文件的组织结构，定位到资源所在的节区；然后，再弄清楚资源文件在该节区内的保存格式，就可以把资源提取出来了。这里的资源内容，还可能是加密过的，这时候，可能还需要反编译出执行代码，定位到资源读取的逻辑，抽取出其中的解密算法。这就需要相当的耐心和功力了。

3、如何实现程序自检，也就是确认自己的代码段没有被人暴力修改过？



4、一旦程序被外部修改，将无法正确执行，该如何实现？

5、如何保护保存在可执行文件中的资源或敏感数据？ 